// IDP-Z3 FO(.) Knowledge Editor: https://interactive-consultant.idp-z3.be/IDE
// Docs: https://docs.idp-z3.be/en/stable/
// Cheat sheet: https://docs.idp-z3.be/en/stable/summary.html

vocabulary V {
    type Num := {1..9}
    type Block := {1..3}
    input: (Num * Num * Num) -> Bool
    is_in: Num -> Block
    solution: (Num * Num) -> Num
}

theory T:V{
    // Each input is in the solution.
    ! r, c, n in Num: input(r, c, n) => solution(r, c) = n.

    // Each number occurs once in every row, column, and 3x3 block.
    // ! r, c1, c2 in Num: c1 ~= c2 => solution(r, c1) ~= solution(r, c2).
    ! r, n in Num: #{ c in Num: solution(r, c) = n } = 1.
    // ! r1, r2, c in Num: r1 ~= r2 => solution(r1, c) ~= solution(r2, c).
    ! c, n in Num: #{ r in Num: solution(r, c) = n } = 1.
    // ! r1, r2, c1, c2 in Num: is_in(r1) = is_in(r2) & is_in(c1) = is_in(c2) & (r1 ~= r2 | c1~= c2) => solution(r1, c1) ~= solution(r2, c2).
    ! rb, cb in Block, n in Num:
        #{ r, c in Num: solution(r, c) = n & is_in(r) = rb & is_in(c) = cb} = 1.
}

structure S:V{
    is_in := {1 -> 1, 2 -> 1, 3 -> 1,
              4 -> 2, 5 -> 2, 6 -> 2,
              7 -> 3, 8 -> 3, 9 -> 3}.

    //  8 5   |     2 | 4
    //  7 2   |       |     9
    //      4 |       |
    // -------|-------|-------
    //        | 1   7 |     2
    //  3   5 |       | 9
    //    4   |       |
    // -------|-------|-------
    //        |   8   |   7
    //    1 7 |       |
    //        |   3 6 |   4

    input := {
        (1, 1, 8), (1, 2, 5), (1, 6, 2), (1, 7, 4),
        (2, 1, 7), (2, 2, 2), (2, 9, 9),
        (3, 3, 4),
        (4, 4, 1), (4, 6, 7), (4, 9, 2),
        (5, 1, 3), (5, 3, 5), (5, 7, 9),
        (6, 2, 4),
        (7, 5, 8), (7, 8, 7),
        (8, 2, 1), (8, 3, 7),
        (9, 5, 3), (9, 6, 6), (9, 8, 4)
    }.
}
procedure main() {
    pretty_print(model_expand(T, S))
}
