// IDP-Z3 FO(.) Knowledge Editor: https://interactive-consultant.idp-z3.be/IDE
// Docs: https://docs.idp-z3.be/en/stable/
// Cheat sheet: https://docs.idp-z3.be/en/stable/summary.html

vocabulary V {
    type Age <: Int
    type Person
    type Name
    name: Person -> Name
    age: Person -> Age
    min_age, max_age: () -> Int
    oldest, youngest: Name -> Bool
    avg_age: () -> Real
    between40and50: () -> Int
}

theory T:V {
    min_age() = min{ age(p) | p in Person }.
    max_age() = max{ age(p) | p in Person }.
    ! p in Person: oldest(name(p)) <=> age(p) = max_age().
    ! p in Person: youngest(name(p)) <=> age(p) = min_age().
    avg_age() = sum{{ age(p) | p in Person }} / #{ p in Person }.
    between40and50() = #{ p in Person : age(p) > 40 & age(p) < 50 }.
}

structure S : V {
	Person := {1..10}.
	Age := {1..50}.
	Name := {A, B, C, D, E, F, G, H, I, J}.
	name := {1 -> A, 2 -> B, 3 -> C, 4 -> D, 5 -> E,
             6 -> F, 7 -> G, 8 -> H, 9 -> I, 10 -> J}.
	age := {1 -> 3, 2 -> 5, 3 -> 3, 4 -> 2, 5 -> 6,
            6 -> 14, 7 -> 6, 8 -> 43, 9 -> 3, 10 -> 2}.
}

procedure main() {
    pretty_print(model_expand(T, S))
}
